<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <apiVersion>52.0</apiVersion>
    <assignments>
        <name>Set_ID_to_null</name>
        <label>Set ID to null</label>
        <locationX>996</locationX>
        <locationY>521</locationY>
        <assignmentItems>
            <assignToReference>Get_Rebate_Type.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Rebate_Type.IsIntegratable</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>Get_Rebate_Type.RebateProgramId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>RebateProgram</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Rebate_Type</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Rebate_Program</name>
        <label>Set Rebate Program</label>
        <locationX>644</locationX>
        <locationY>93</locationY>
        <assignmentItems>
            <assignToReference>RebateProgram</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>CurrentMainRecord.Rebate_Program__c</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Selected_Rebate_Types</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Rebate_Program_0</name>
        <label>Set Rebate Program</label>
        <locationX>560</locationX>
        <locationY>255</locationY>
        <assignmentItems>
            <assignToReference>RebateProgram</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>SelectProgram_0.recordId</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Selected_Rebate_Types</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Set_Rebate_Program_0_0</name>
        <label>Set Rebate Program</label>
        <locationX>686</locationX>
        <locationY>416</locationY>
        <assignmentItems>
            <assignToReference>RebateProgram</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_Program.RebateProgram</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Selected_Rebate_Types</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Get_program_from_user_selection</name>
        <label>Get program from user selection</label>
        <locationX>82</locationX>
        <locationY>584</locationY>
        <defaultConnector>
            <targetReference>Create_Program</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>User did not select a program</defaultConnectorLabel>
        <rules>
            <name>User_selected_program</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>SelectProgram_0.recordId</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>SelectProgram_0.recordId</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue></stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Member</targetReference>
            </connector>
            <label>User selected program</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Rebate_Program_populated</name>
        <label>Is Rebate Program populated</label>
        <locationX>432</locationX>
        <locationY>88</locationY>
        <defaultConnector>
            <targetReference>Set_Rebate_Program</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Not Null</defaultConnectorLabel>
        <rules>
            <name>Is_Null</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>CurrentMainRecord.Rebate_Program__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Rebate_Program</targetReference>
            </connector>
            <label>Is Null</label>
        </rules>
    </decisions>
    <decisions>
        <name>Member_exists</name>
        <label>Member exists?</label>
        <locationX>370</locationX>
        <locationY>364</locationY>
        <defaultConnector>
            <targetReference>Set_Rebate_Program_0</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Yes</defaultConnectorLabel>
        <rules>
            <name>Member_is_not_added</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Member.Id</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Create_Member</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <dynamicChoiceSets>
        <name>RPPayoutFrequency</name>
        <dataType>Picklist</dataType>
        <displayField xsi:nil="true"/>
        <object xsi:nil="true"/>
        <picklistField>Frequency</picklistField>
        <picklistObject>RebateProgram</picklistObject>
    </dynamicChoiceSets>
    <interviewLabel>Eligible Rebates on Opportunity {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Eligible Rebates on Opportunity</label>
    <loops>
        <name>Loop_Selected_Rebate_Types</name>
        <label>Loop Selected Rebate Types</label>
        <locationX>927</locationX>
        <locationY>243</locationY>
        <collectionReference>SelectedRebateTypes</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Get_Rebate_Type</targetReference>
        </nextValueConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>FREE_FORM_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>Flow</processType>
    <recordCreates>
        <name>Create_Member</name>
        <label>Create Member</label>
        <locationX>501</locationX>
        <locationY>465</locationY>
        <connector>
            <targetReference>Set_Rebate_Program_0</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>CurrentMainRecord.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RebateProgramId</field>
            <value>
                <elementReference>SelectProgram_0.recordId</elementReference>
            </value>
        </inputAssignments>
        <object>RebateProgramMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordCreates>
        <name>Create_Rebate_Type</name>
        <label>Create Rebate Type</label>
        <locationX>1128</locationX>
        <locationY>409</locationY>
        <connector>
            <targetReference>Create_Reference</targetReference>
        </connector>
        <inputReference>Get_Rebate_Type</inputReference>
    </recordCreates>
    <recordCreates>
        <name>Create_Reference</name>
        <label>Create Reference</label>
        <locationX>1177</locationX>
        <locationY>224</locationY>
        <connector>
            <targetReference>Set_Rebate_Program_on_Opp</targetReference>
        </connector>
        <inputAssignments>
            <field>ProgramRebateTypeId</field>
            <value>
                <elementReference>Get_Rebate_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ProgramRebateTypeSrcId</field>
            <value>
                <elementReference>Loop_Selected_Rebate_Types.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>ReferenceObjectId</field>
            <value>
                <elementReference>CurrentMainRecord.Id</elementReference>
            </value>
        </inputAssignments>
        <object>ProgramRebateTypeReference</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordLookups>
        <name>Get_Member</name>
        <label>Get Member</label>
        <locationX>262</locationX>
        <locationY>443</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Member_exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>RebateProgramId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>SelectProgram_0.recordId</elementReference>
            </value>
        </filters>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CurrentMainRecord.AccountId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>RebateProgramMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Opp</name>
        <label>Get Opp</label>
        <locationX>97</locationX>
        <locationY>187</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Add_Selected_Rebate_Types</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CurrentMainRecord.Id</elementReference>
            </value>
        </filters>
        <object>Opportunity</object>
        <outputReference>CurrentMainRecord</outputReference>
        <queriedFields>Id</queriedFields>
        <queriedFields>Name</queriedFields>
        <queriedFields>AccountId</queriedFields>
        <queriedFields>CreatedDate</queriedFields>
        <queriedFields>Rebate_Program__c</queriedFields>
    </recordLookups>
    <recordLookups>
        <name>Get_Rebate_Type</name>
        <label>Get Rebate Type</label>
        <locationX>852</locationX>
        <locationY>549</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Set_ID_to_null</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Loop_Selected_Rebate_Types.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>ProgramRebateType</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Set_Rebate_Program_on_Opp</name>
        <label>Set Rebate Program on Opp</label>
        <locationX>1149</locationX>
        <locationY>46</locationY>
        <connector>
            <targetReference>Create_Benefits_and_Filters</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>CurrentMainRecord.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Rebate_Program__c</field>
            <value>
                <elementReference>RebateProgram</elementReference>
            </value>
        </inputAssignments>
        <object>Opportunity</object>
    </recordUpdates>
    <screens>
        <name>Add_Selected_Rebate_Types</name>
        <label>Add Selected Rebate Types</label>
        <locationX>335</locationX>
        <locationY>192</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Is_Rebate_Program_populated</targetReference>
        </connector>
        <fields>
            <name>Confirm</name>
            <fieldText>&lt;p&gt;This action will add the selections to this Opportunity. Continue?&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <screens>
        <name>Get_Rebate_Program</name>
        <label>Get Rebate Program</label>
        <locationX>99</locationX>
        <locationY>349</locationY>
        <allowBack>true</allowBack>
        <allowFinish>true</allowFinish>
        <allowPause>true</allowPause>
        <connector>
            <targetReference>Get_program_from_user_selection</targetReference>
        </connector>
        <fields>
            <name>Notes</name>
            <fieldText>&lt;p&gt;&lt;b&gt;Add the selections to an existing program OR create a new one&lt;/b&gt;&lt;/p&gt;</fieldText>
            <fieldType>DisplayText</fieldType>
        </fields>
        <fields>
            <name>SelectProgram_0</name>
            <extensionName>flowruntime:lookup</extensionName>
            <fieldType>ComponentInstance</fieldType>
            <inputParameters>
                <name>fieldApiName</name>
                <value>
                    <stringValue>Rebate_Program__c</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>label</name>
                <value>
                    <stringValue>Select a Program (leave blank to create new)</stringValue>
                </value>
            </inputParameters>
            <inputParameters>
                <name>objectApiName</name>
                <value>
                    <stringValue>Opportunity</stringValue>
                </value>
            </inputParameters>
            <inputsOnNextNavToAssocScrn>UseStoredValues</inputsOnNextNavToAssocScrn>
            <isRequired>true</isRequired>
            <storeOutputAutomatically>true</storeOutputAutomatically>
        </fields>
        <fields>
            <name>Or_Create_New_select_a_Payout_Frequency</name>
            <choiceReferences>RPPayoutFrequency</choiceReferences>
            <dataType>String</dataType>
            <fieldText>Or, Create New (select a Payout Frequency</fieldText>
            <fieldType>DropdownBox</fieldType>
            <isRequired>false</isRequired>
        </fields>
        <showFooter>true</showFooter>
        <showHeader>true</showHeader>
    </screens>
    <start>
        <locationX>50</locationX>
        <locationY>50</locationY>
        <connector>
            <targetReference>Get_Opp</targetReference>
        </connector>
    </start>
    <status>Active</status>
    <subflows>
        <name>Create_Benefits_and_Filters</name>
        <label>Create Benefits and Filters</label>
        <locationX>934</locationX>
        <locationY>58</locationY>
        <connector>
            <targetReference>Loop_Selected_Rebate_Types</targetReference>
        </connector>
        <flowName>Create_Benefits_and_Filters</flowName>
        <inputAssignments>
            <name>NewRebateType</name>
            <value>
                <elementReference>Get_Rebate_Type.Id</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>SrcRebateType</name>
            <value>
                <elementReference>Loop_Selected_Rebate_Types.Id</elementReference>
            </value>
        </inputAssignments>
    </subflows>
    <subflows>
        <name>Create_Program</name>
        <label>Create Program</label>
        <locationX>599</locationX>
        <locationY>671</locationY>
        <connector>
            <targetReference>Set_Rebate_Program_0_0</targetReference>
        </connector>
        <flowName>Create_Program_and_Rebate_Types</flowName>
        <inputAssignments>
            <name>AccountId</name>
            <value>
                <elementReference>CurrentMainRecord.AccountId</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>EndDate</name>
            <value>
                <dateValue>2022-12-31</dateValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Frequency</name>
            <value>
                <elementReference>RPPayoutFrequency</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>Name</name>
            <value>
                <elementReference>CurrentMainRecord.Name</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <name>StartDate</name>
            <value>
                <elementReference>CurrentMainRecord.CreatedDate</elementReference>
            </value>
        </inputAssignments>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </subflows>
    <variables>
        <name>CurrentMainRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>Opportunity</objectType>
    </variables>
    <variables>
        <name>RebateProgram</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>SelectedRebateTypes</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>true</isInput>
        <isOutput>false</isOutput>
        <objectType>ProgramRebateType</objectType>
    </variables>
</Flow>
